// Code generated by MockGen. DO NOT EDIT.
// Source: go-service-template/internal/app/service (interfaces: TxHelper)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	postgres "go-service-template/internal/app/infrastructure/postgres"
)

// MockTxHelper is a mock of TxHelper interface.
type MockTxHelper struct {
	ctrl     *gomock.Controller
	recorder *MockTxHelperMockRecorder
}

// MockTxHelperMockRecorder is the mock recorder for MockTxHelper.
type MockTxHelperMockRecorder struct {
	mock *MockTxHelper
}

// NewMockTxHelper creates a new mock instance.
func NewMockTxHelper(ctrl *gomock.Controller) *MockTxHelper {
	mock := &MockTxHelper{ctrl: ctrl}
	mock.recorder = &MockTxHelperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTxHelper) EXPECT() *MockTxHelperMockRecorder {
	return m.recorder
}

// WithTx mocks base method.
func (m *MockTxHelper) WithTx(arg0 context.Context) postgres.TxFunc {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WithTx", arg0)
	ret0, _ := ret[0].(postgres.TxFunc)
	return ret0
}

// WithTx indicates an expected call of WithTx.
func (mr *MockTxHelperMockRecorder) WithTx(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WithTx", reflect.TypeOf((*MockTxHelper)(nil).WithTx), arg0)
}
