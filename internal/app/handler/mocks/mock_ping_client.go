// Code generated by MockGen. DO NOT EDIT.
// Source: go-service-template/internal/app/handler (interfaces: PingClient)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	dto "go-service-template/internal/app/dto"
)

// MockPingClient is a mock of PingClient interface.
type MockPingClient struct {
	ctrl     *gomock.Controller
	recorder *MockPingClientMockRecorder
}

// MockPingClientMockRecorder is the mock recorder for MockPingClient.
type MockPingClientMockRecorder struct {
	mock *MockPingClient
}

// NewMockPingClient creates a new mock instance.
func NewMockPingClient(ctrl *gomock.Controller) *MockPingClient {
	mock := &MockPingClient{ctrl: ctrl}
	mock.recorder = &MockPingClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPingClient) EXPECT() *MockPingClientMockRecorder {
	return m.recorder
}

// Ping mocks base method.
func (m *MockPingClient) Ping(arg0 context.Context) (*dto.Ping, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Ping", arg0)
	ret0, _ := ret[0].(*dto.Ping)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Ping indicates an expected call of Ping.
func (mr *MockPingClientMockRecorder) Ping(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ping", reflect.TypeOf((*MockPingClient)(nil).Ping), arg0)
}
